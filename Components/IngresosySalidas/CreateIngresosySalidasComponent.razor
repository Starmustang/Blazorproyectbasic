@using Entity
@using Business
@inject B_Bodega bbodega
@inject B_Product bproduct
@inject B_Almacen balmacen
@inject B_IngresosySalidas bingresosysalidas
@inject NavigationManager NavManager

<div class="form-control">
	<select class="form-control" @onchange="OnChangeAlmacen">
		<option value="">Seleccione un almacen...</option>
		@foreach (var almacen in almacenes)
		{
			<option value="@almacen.AlmacenId">@almacen.AlmacenName</option>
		}
	</select>
</div>

<hr />

<EditForm Model="oingresosysalidas">
	<div class="form-group">
		<label>Id de Ingreso y salida</label>
		<InputText class="form-control" @bind-Value="oingresosysalidas.IngresoId" readonly />
	</div>

	<div class="form-group">
		<label>Fecha de ingreso</label>
		<InputDate class="form-control" @bind-Value="oingresosysalidas.IngresoFecha" readonly />
	</div>

	<div class="form-group">
		<label>Cantidad</label>
		<InputNumber class="form-control" @bind-Value="oingresosysalidas.Cantidad" />
	</div>

	<div class="form-group">
		<label>Es de entrada</label>
		<InputCheckbox @bind-Value="oingresosysalidas.Isinput" />
	</div>

	<div class="form-group">
		<label>Bodega</label>
		<InputSelect class="form-control" @bind-Value="oingresosysalidas.BodegaId">
			<option value="">Seleccionar un producto...</option>
			@foreach (var bodega in tempbodega)
			{
				<option value="@bodega.BodegaId">@bodega.Product.ProductName</option>
			}
		</InputSelect>
	</div>

	<input type="button" value="@buttonValue" @onclick=SaveInOut style="margin-top: 10px;" class="form-control" />
</EditForm>

<div class="text-center h4">
	@message
</div>

@code {
	BodegaEntity obodega = new BodegaEntity();
	ProductEntity oProduct = new ProductEntity();
	IngresosySalidasEntity oingresosysalidas = new IngresosySalidasEntity();
	List<BodegaEntity> tempbodega = new List<BodegaEntity>();

	List<ProductEntity> products = new List<ProductEntity>();
	List<AlmacenEntity> almacenes = new List<AlmacenEntity>();

	string message;

	string buttonValue => oingresosysalidas.Isinput ? "Registrar Entrada" : "Registrar Salida";

	protected override async Task OnInitializedAsync()
	{
		// products = await bproduct.GetProductListAsync();
		// if (products.Any())
		// {
		// 	obodega.ProductId = products.First().ProductId;
		// }
		almacenes = await balmacen.GetAlmacenListAsync();
		// if (almacenes.Any())
		// {
		// 	obodega.AlmacenId = almacenes.First().AlmacenId;
		// }




	}

	private async void OnChangeAlmacen(ChangeEventArgs e)
	{
		var idAlmacen = e.Value.ToString();

		tempbodega = await bbodega.BodegaProductByAlmacen(idAlmacen);

		// Bodega = bbodega.
	}

	private async void SaveInOut()
	{
		// await bbodega.CreateBodegaAsync(obodega);
		// oingresosysalidas.IngresoId = Guid.NewGuid().ToString();
		// oingresosysalidas.IngresoFecha = DateTime.Now;
		// await bingresosysalidas.CreateIngresosySalidasAsync(oingresosysalidas);
		// NavManager.NavigateTo("/ingresosysalidas/list");

		obodega = tempbodega.LastOrDefault(p => p.BodegaId == oingresosysalidas.BodegaId);
		oProduct = obodega.Product;

		if (oingresosysalidas.Isinput)
		{
			obodega.CantidadParcial = obodega.CantidadParcial + oingresosysalidas.Cantidad;
			await bbodega.UpdateBodegaAsync(obodega);

			oProduct.ProductQuantity = oProduct.ProductQuantity + oingresosysalidas.Cantidad;
			await bproduct.UpdateProductAsync(oProduct);

			message = $"El producto {oProduct.ProductName} ha sido actualizado";
		}
		else
		{
			if (IsBiggetThanZero(oingresosysalidas.Cantidad, obodega.CantidadParcial))
			{
				obodega.CantidadParcial = obodega.CantidadParcial - oingresosysalidas.Cantidad;
				await bbodega.UpdateBodegaAsync(obodega);

				oProduct.ProductQuantity = oProduct.ProductQuantity - oingresosysalidas.Cantidad;
				await bproduct.UpdateProductAsync(oProduct);

				message = $"El producto {oProduct.ProductName} ha sido actualizado";
			}
			else {
				message = $"No existe la cantidad suficiente en almacen para el producto {oProduct.ProductName}";
			}
			
		}
	}

	private bool IsBiggetThanZero(int cantidad, int CantidadBodega)
	{
		if (CantidadBodega > cantidad)
		{
			return true;
		}
		return false;
	}

	
}
