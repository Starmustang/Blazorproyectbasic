@using Entity
@using Business
@inject B_Bodega bbodega
@inject B_Product bproduct
@inject B_Almacen balmacen
@inject B_IngresosySalidas bingresosysalidas
@inject NavigationManager NavManager


<EditForm Model="oingresosysalidas">
	<div class="form-group">
		<label>Id de Ingreso y salida</label>
		<InputText class="form-control" @bind-Value="oingresosysalidas.IngresoId" readonly />
	</div>

	<div class="form-group">
		<label>Fecha de ingreso</label>
		<InputDate class="form-control" @bind-Value="oingresosysalidas.IngresoFecha" />
	</div>

	<div class="form-group">
		<label>Cantidad</label>
		<InputNumber class="form-control" @bind-Value="oingresosysalidas.Cantidad" />
	</div>

	<div class="form-group">
		<label>Es de entrada</label>
		<InputCheckbox class="form-control" @bind-Value="oingresosysalidas.Isinput" />
	</div>

	<div class="form-group">
		<label>Bodega</label>
		<InputSelect class="form-control" @bind-Value="oingresosysalidas.BodegaId">
			@foreach (var bodega in tempbodega)
			{
				<option value="@bodega.BodegaId">@bodega.BodegaId</option>
			}
		</InputSelect>
	</div>

	<input type="button" value="Agregar bodega" @onclick=SaveBodega style="margin-top: 10px;" class="form-control" />
</EditForm>

@code {
	[Parameter]
	public string Idingresos { get; set; }

	IngresosySalidasEntity oingresosysalidas = new IngresosySalidasEntity();
	List<BodegaEntity> tempbodega = new List<BodegaEntity>();



	protected override async Task OnInitializedAsync()
	{
		// products = await bproduct.GetProductListAsync();
		// if (products.Any())
		// {
		// 	obodega.ProductId = products.First().ProductId;
		// }
		// almacenes = await balmacen.GetAlmacenListAsync();
		// if (almacenes.Any())
		// {
		// 	obodega.AlmacenId = almacenes.First().AlmacenId;
		// }

		tempbodega = await bbodega.GetBodegaListAsync();
		if (tempbodega.Any())
		{
			oingresosysalidas.BodegaId = tempbodega.First().BodegaId;
		}

		oingresosysalidas = await bingresosysalidas.GetIngresosySalidasByIdAsync(Idingresos);

	}

	private async void SaveBodega()
	{
		// await bbodega.CreateBodegaAsync(obodega);
		await bingresosysalidas.UpdateIngresosySalidasAsync(oingresosysalidas);
		NavManager.NavigateTo("/ingresosysalidas/list");
	}
}
