@using Entity
@using Business
@inject B_Product bproduct;
@inject B_Category bcategory;
@inject NavigationManager NavManager;

<div>
    <EditForm Model="oProduct">
        <div class="form-group">
            <label>Referencia:</label>
            <InputText @bind-Value="oProduct.ProductId" class="form-control" />
        </div>

        <div class="form-group">
            <label>Nombre:</label>
            <InputText @bind-Value="oProduct.ProductName" class="form-control"/>
        </div>

        <div class="form-group">
            <label>Descripcion:</label>
            <InputTextArea @bind-Value="oProduct.ProductDescription" class="form-control"/>
        </div>

        <div class="form-group">
            <label>Categoria:</label>
            <InputSelect @bind-Value="oProduct.categoryId" class="form-control">
                @foreach (var category in categories)
                {
                    <option value="@category.categoryId">@category.categoryName</option>
                }
                
            </InputSelect>
        </div>

        <input type="button" value="Agregar Producto" @onclick="SaveProduct" class="form-control" style="margin-top: 10px;" />
    </EditForm>
</div>

@code {
    ProductEntity oProduct = new ProductEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = await bcategory.GetCategoryListAsync();
        if (categories.Any())
        {
            oProduct.categoryId = categories.First().categoryId;
        }

    }

    private async void SaveProduct()
    {
        await bproduct.CreateProductAsync(oProduct);
        NavManager.NavigateTo("product/list");
    }
}
